<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2016 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <settings>
        <!-- 打印查询语句 -->
        <setting name="logPrefix" value="*****************************" />
        <setting name="logImpl" value="STDOUT_LOGGING" />
    </settings>
    <typeAliases>
        <!--指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean-->
        <!--
            作用：http://www.mybatis.org/mybatis-3/zh/sqlmap-xml.html
            <select id="selectUsers" resultType="com.someapp.model.User">
            要记住类型别名是你的伙伴。使用它们你可以不用输入类的全路径。比如:

            In mybatis-config.xml file
            <typeAlias type="com.someapp.model.User" alias="User"/>

            In SQL Mapping XML file
            <select id="selectUsers" resultType="User">
                select id, username, hashedPassword
                from some_table
                where id = #{id}
            </select>
        -->
        <!--
        http://www.mybatis.org/mybatis-3/zh/configuration.html#typeAliases
        默认：
        在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名。比如 com.chenkezhao.clientinf.entity.Test 的别名为 test

        @Alias("author")
        public class Author {
            ...
        }

        经过试验，发现别名对首字母大小写并不敏感，但还是按要求来符合些

        其它：
        已经为许多常见的 Java 类型内建了相应的类型别名。它们都是大小写不敏感的，需要注意的是由基本类型名称重复导致的特殊处理。
        具体看链接
        -->
        <package name="com.chenkezhao.clientinf.entity"/>
        <package name="com.chenkezhao.mobile.androidinf.entity"/>
        <package name="com.chenkezhao.mobile.mpinf.entity"/>
        <package name="com.chenkezhao.test"/>
    </typeAliases>
    <plugins>
        <!--
        分页插件 https://www.cnblogs.com/EasonJim/p/7056270.html
        注意：这个插件定义了一个规则，也就是在mapper中SQL语句的id必须包含ListPage才能被拦截。否则将不会分页处理。
         -->
        <plugin interceptor="com.chenkezhao.framework.mybatis.PagePlugin">
            <property name="dialect" value="mysql" />
            <property name="pageSqlId" value=".*PageList.*" />
        </plugin>
    </plugins>
    <mappers>
        <!-- Register all interfaces in a package as mappers -->
        <!--
        <package name="mybatis.mapper"/>
        在application.properties里配置mybatis.mapperLocations
        -->
        <!--<mapper resource="mybatis/mapper/CategoryMapper.xml"/>-->
    </mappers>
</configuration>